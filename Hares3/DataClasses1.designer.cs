#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hares3
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BDComercioTtecnologico")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertUsuarios(Usuarios instance);
    partial void UpdateUsuarios(Usuarios instance);
    partial void DeleteUsuarios(Usuarios instance);
    partial void InsertTipoUsuario(TipoUsuario instance);
    partial void UpdateTipoUsuario(TipoUsuario instance);
    partial void DeleteTipoUsuario(TipoUsuario instance);
    partial void InsertProveedores(Proveedores instance);
    partial void UpdateProveedores(Proveedores instance);
    partial void DeleteProveedores(Proveedores instance);
    partial void InsertProductos(Productos instance);
    partial void UpdateProductos(Productos instance);
    partial void DeleteProductos(Productos instance);
    partial void InsertPedidos(Pedidos instance);
    partial void UpdatePedidos(Pedidos instance);
    partial void DeletePedidos(Pedidos instance);
    partial void InsertInventario(Inventario instance);
    partial void UpdateInventario(Inventario instance);
    partial void DeleteInventario(Inventario instance);
    partial void InsertDetallesPedido(DetallesPedido instance);
    partial void UpdateDetallesPedido(DetallesPedido instance);
    partial void DeleteDetallesPedido(DetallesPedido instance);
    partial void InsertDescuentos(Descuentos instance);
    partial void UpdateDescuentos(Descuentos instance);
    partial void DeleteDescuentos(Descuentos instance);
    partial void InsertClientes(Clientes instance);
    partial void UpdateClientes(Clientes instance);
    partial void DeleteClientes(Clientes instance);
    partial void InsertCategorias(Categorias instance);
    partial void UpdateCategorias(Categorias instance);
    partial void DeleteCategorias(Categorias instance);
    #endregion
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Usuarios> Usuarios
		{
			get
			{
				return this.GetTable<Usuarios>();
			}
		}
		
		public System.Data.Linq.Table<TipoUsuario> TipoUsuario
		{
			get
			{
				return this.GetTable<TipoUsuario>();
			}
		}
		
		public System.Data.Linq.Table<Proveedores> Proveedores
		{
			get
			{
				return this.GetTable<Proveedores>();
			}
		}
		
		public System.Data.Linq.Table<Productos> Productos
		{
			get
			{
				return this.GetTable<Productos>();
			}
		}
		
		public System.Data.Linq.Table<Pedidos> Pedidos
		{
			get
			{
				return this.GetTable<Pedidos>();
			}
		}
		
		public System.Data.Linq.Table<Inventario> Inventario
		{
			get
			{
				return this.GetTable<Inventario>();
			}
		}
		
		public System.Data.Linq.Table<DetallesPedido> DetallesPedido
		{
			get
			{
				return this.GetTable<DetallesPedido>();
			}
		}
		
		public System.Data.Linq.Table<Descuentos> Descuentos
		{
			get
			{
				return this.GetTable<Descuentos>();
			}
		}
		
		public System.Data.Linq.Table<Clientes> Clientes
		{
			get
			{
				return this.GetTable<Clientes>();
			}
		}
		
		public System.Data.Linq.Table<Categorias> Categorias
		{
			get
			{
				return this.GetTable<Categorias>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TUsuarios")]
	public partial class Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodUsuario;
		
		private string _Contrasena;
		
		private string _CodTipoUsuario;
		
		private EntitySet<Clientes> _Clientes;
		
		private EntityRef<TipoUsuario> _TipoUsuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodUsuarioChanging(string value);
    partial void OnCodUsuarioChanged();
    partial void OnContrasenaChanging(string value);
    partial void OnContrasenaChanged();
    partial void OnCodTipoUsuarioChanging(string value);
    partial void OnCodTipoUsuarioChanged();
    #endregion
		
		public Usuarios()
		{
			this._Clientes = new EntitySet<Clientes>(new Action<Clientes>(this.attach_Clientes), new Action<Clientes>(this.detach_Clientes));
			this._TipoUsuario = default(EntityRef<TipoUsuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodUsuario", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodUsuario
		{
			get
			{
				return this._CodUsuario;
			}
			set
			{
				if ((this._CodUsuario != value))
				{
					this.OnCodUsuarioChanging(value);
					this.SendPropertyChanging();
					this._CodUsuario = value;
					this.SendPropertyChanged("CodUsuario");
					this.OnCodUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contrasena", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Contrasena
		{
			get
			{
				return this._Contrasena;
			}
			set
			{
				if ((this._Contrasena != value))
				{
					this.OnContrasenaChanging(value);
					this.SendPropertyChanging();
					this._Contrasena = value;
					this.SendPropertyChanged("Contrasena");
					this.OnContrasenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodTipoUsuario", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string CodTipoUsuario
		{
			get
			{
				return this._CodTipoUsuario;
			}
			set
			{
				if ((this._CodTipoUsuario != value))
				{
					if (this._TipoUsuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodTipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._CodTipoUsuario = value;
					this.SendPropertyChanged("CodTipoUsuario");
					this.OnCodTipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TUsuarios_TClientes", Storage="_Clientes", ThisKey="CodUsuario", OtherKey="CodUsuario")]
		public EntitySet<Clientes> Clientes
		{
			get
			{
				return this._Clientes;
			}
			set
			{
				this._Clientes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TTipoUsuario_TUsuarios", Storage="_TipoUsuario", ThisKey="CodTipoUsuario", OtherKey="CodTipoUsuario", IsForeignKey=true)]
		public TipoUsuario TipoUsuario
		{
			get
			{
				return this._TipoUsuario.Entity;
			}
			set
			{
				TipoUsuario previousValue = this._TipoUsuario.Entity;
				if (((previousValue != value) 
							|| (this._TipoUsuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoUsuario.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._TipoUsuario.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._CodTipoUsuario = value.CodTipoUsuario;
					}
					else
					{
						this._CodTipoUsuario = default(string);
					}
					this.SendPropertyChanged("TipoUsuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clientes(Clientes entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Clientes(Clientes entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TTipoUsuario")]
	public partial class TipoUsuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodTipoUsuario;
		
		private string _Tipo;
		
		private EntitySet<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodTipoUsuarioChanging(string value);
    partial void OnCodTipoUsuarioChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    #endregion
		
		public TipoUsuario()
		{
			this._Usuarios = new EntitySet<Usuarios>(new Action<Usuarios>(this.attach_Usuarios), new Action<Usuarios>(this.detach_Usuarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodTipoUsuario", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodTipoUsuario
		{
			get
			{
				return this._CodTipoUsuario;
			}
			set
			{
				if ((this._CodTipoUsuario != value))
				{
					this.OnCodTipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._CodTipoUsuario = value;
					this.SendPropertyChanged("CodTipoUsuario");
					this.OnCodTipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TTipoUsuario_TUsuarios", Storage="_Usuarios", ThisKey="CodTipoUsuario", OtherKey="CodTipoUsuario")]
		public EntitySet<Usuarios> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuario = this;
		}
		
		private void detach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.TipoUsuario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TProveedores")]
	public partial class Proveedores : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodProveedor;
		
		private string _Nombre;
		
		private string _Telefono;
		
		private string _Email;
		
		private string _Direccion;
		
		private EntitySet<Productos> _Productos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodProveedorChanging(string value);
    partial void OnCodProveedorChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    #endregion
		
		public Proveedores()
		{
			this._Productos = new EntitySet<Productos>(new Action<Productos>(this.attach_Productos), new Action<Productos>(this.detach_Productos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodProveedor", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodProveedor
		{
			get
			{
				return this._CodProveedor;
			}
			set
			{
				if ((this._CodProveedor != value))
				{
					this.OnCodProveedorChanging(value);
					this.SendPropertyChanging();
					this._CodProveedor = value;
					this.SendPropertyChanged("CodProveedor");
					this.OnCodProveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TProveedores_TProductos", Storage="_Productos", ThisKey="CodProveedor", OtherKey="CodProveedor")]
		public EntitySet<Productos> Productos
		{
			get
			{
				return this._Productos;
			}
			set
			{
				this._Productos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Productos(Productos entity)
		{
			this.SendPropertyChanging();
			entity.Proveedores = this;
		}
		
		private void detach_Productos(Productos entity)
		{
			this.SendPropertyChanging();
			entity.Proveedores = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TProductos")]
	public partial class Productos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodProducto;
		
		private string _Nombre;
		
		private string _Descripcion;
		
		private decimal _Precio;
		
		private string _CodCategoria;
		
		private string _CodProveedor;
		
		private EntitySet<Inventario> _Inventario;
		
		private EntitySet<DetallesPedido> _DetallesPedido;
		
		private EntityRef<Proveedores> _Proveedores;
		
		private EntityRef<Categorias> _Categorias;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodProductoChanging(string value);
    partial void OnCodProductoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    partial void OnCodCategoriaChanging(string value);
    partial void OnCodCategoriaChanged();
    partial void OnCodProveedorChanging(string value);
    partial void OnCodProveedorChanged();
    #endregion
		
		public Productos()
		{
			this._Inventario = new EntitySet<Inventario>(new Action<Inventario>(this.attach_Inventario), new Action<Inventario>(this.detach_Inventario));
			this._DetallesPedido = new EntitySet<DetallesPedido>(new Action<DetallesPedido>(this.attach_DetallesPedido), new Action<DetallesPedido>(this.detach_DetallesPedido));
			this._Proveedores = default(EntityRef<Proveedores>);
			this._Categorias = default(EntityRef<Categorias>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodProducto", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodProducto
		{
			get
			{
				return this._CodProducto;
			}
			set
			{
				if ((this._CodProducto != value))
				{
					this.OnCodProductoChanging(value);
					this.SendPropertyChanging();
					this._CodProducto = value;
					this.SendPropertyChanged("CodProducto");
					this.OnCodProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Decimal(10,2) NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodCategoria", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string CodCategoria
		{
			get
			{
				return this._CodCategoria;
			}
			set
			{
				if ((this._CodCategoria != value))
				{
					if (this._Categorias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodCategoriaChanging(value);
					this.SendPropertyChanging();
					this._CodCategoria = value;
					this.SendPropertyChanged("CodCategoria");
					this.OnCodCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodProveedor", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string CodProveedor
		{
			get
			{
				return this._CodProveedor;
			}
			set
			{
				if ((this._CodProveedor != value))
				{
					if (this._Proveedores.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodProveedorChanging(value);
					this.SendPropertyChanging();
					this._CodProveedor = value;
					this.SendPropertyChanged("CodProveedor");
					this.OnCodProveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TProductos_TInventario", Storage="_Inventario", ThisKey="CodProducto", OtherKey="CodProducto")]
		public EntitySet<Inventario> Inventario
		{
			get
			{
				return this._Inventario;
			}
			set
			{
				this._Inventario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TProductos_TDetallesPedido", Storage="_DetallesPedido", ThisKey="CodProducto", OtherKey="CodProducto")]
		public EntitySet<DetallesPedido> DetallesPedido
		{
			get
			{
				return this._DetallesPedido;
			}
			set
			{
				this._DetallesPedido.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TProveedores_TProductos", Storage="_Proveedores", ThisKey="CodProveedor", OtherKey="CodProveedor", IsForeignKey=true)]
		public Proveedores Proveedores
		{
			get
			{
				return this._Proveedores.Entity;
			}
			set
			{
				Proveedores previousValue = this._Proveedores.Entity;
				if (((previousValue != value) 
							|| (this._Proveedores.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proveedores.Entity = null;
						previousValue.Productos.Remove(this);
					}
					this._Proveedores.Entity = value;
					if ((value != null))
					{
						value.Productos.Add(this);
						this._CodProveedor = value.CodProveedor;
					}
					else
					{
						this._CodProveedor = default(string);
					}
					this.SendPropertyChanged("Proveedores");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TCategorias_TProductos", Storage="_Categorias", ThisKey="CodCategoria", OtherKey="CodCategoria", IsForeignKey=true)]
		public Categorias Categorias
		{
			get
			{
				return this._Categorias.Entity;
			}
			set
			{
				Categorias previousValue = this._Categorias.Entity;
				if (((previousValue != value) 
							|| (this._Categorias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categorias.Entity = null;
						previousValue.Productos.Remove(this);
					}
					this._Categorias.Entity = value;
					if ((value != null))
					{
						value.Productos.Add(this);
						this._CodCategoria = value.CodCategoria;
					}
					else
					{
						this._CodCategoria = default(string);
					}
					this.SendPropertyChanged("Categorias");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inventario(Inventario entity)
		{
			this.SendPropertyChanging();
			entity.Productos = this;
		}
		
		private void detach_Inventario(Inventario entity)
		{
			this.SendPropertyChanging();
			entity.Productos = null;
		}
		
		private void attach_DetallesPedido(DetallesPedido entity)
		{
			this.SendPropertyChanging();
			entity.Productos = this;
		}
		
		private void detach_DetallesPedido(DetallesPedido entity)
		{
			this.SendPropertyChanging();
			entity.Productos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TPedidos")]
	public partial class Pedidos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodPedido;
		
		private string _CodCliente;
		
		private System.DateTime _FechaPedido;
		
		private decimal _Total;
		
		private EntitySet<DetallesPedido> _DetallesPedido;
		
		private EntityRef<Clientes> _Clientes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodPedidoChanging(string value);
    partial void OnCodPedidoChanged();
    partial void OnCodClienteChanging(string value);
    partial void OnCodClienteChanged();
    partial void OnFechaPedidoChanging(System.DateTime value);
    partial void OnFechaPedidoChanged();
    partial void OnTotalChanging(decimal value);
    partial void OnTotalChanged();
    #endregion
		
		public Pedidos()
		{
			this._DetallesPedido = new EntitySet<DetallesPedido>(new Action<DetallesPedido>(this.attach_DetallesPedido), new Action<DetallesPedido>(this.detach_DetallesPedido));
			this._Clientes = default(EntityRef<Clientes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPedido", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodPedido
		{
			get
			{
				return this._CodPedido;
			}
			set
			{
				if ((this._CodPedido != value))
				{
					this.OnCodPedidoChanging(value);
					this.SendPropertyChanging();
					this._CodPedido = value;
					this.SendPropertyChanged("CodPedido");
					this.OnCodPedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodCliente", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string CodCliente
		{
			get
			{
				return this._CodCliente;
			}
			set
			{
				if ((this._CodCliente != value))
				{
					if (this._Clientes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodClienteChanging(value);
					this.SendPropertyChanging();
					this._CodCliente = value;
					this.SendPropertyChanged("CodCliente");
					this.OnCodClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaPedido", DbType="Date NOT NULL")]
		public System.DateTime FechaPedido
		{
			get
			{
				return this._FechaPedido;
			}
			set
			{
				if ((this._FechaPedido != value))
				{
					this.OnFechaPedidoChanging(value);
					this.SendPropertyChanging();
					this._FechaPedido = value;
					this.SendPropertyChanged("FechaPedido");
					this.OnFechaPedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(10,2) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TPedidos_TDetallesPedido", Storage="_DetallesPedido", ThisKey="CodPedido", OtherKey="CodPedido")]
		public EntitySet<DetallesPedido> DetallesPedido
		{
			get
			{
				return this._DetallesPedido;
			}
			set
			{
				this._DetallesPedido.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TClientes_TPedidos", Storage="_Clientes", ThisKey="CodCliente", OtherKey="CodCliente", IsForeignKey=true)]
		public Clientes Clientes
		{
			get
			{
				return this._Clientes.Entity;
			}
			set
			{
				Clientes previousValue = this._Clientes.Entity;
				if (((previousValue != value) 
							|| (this._Clientes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clientes.Entity = null;
						previousValue.Pedidos.Remove(this);
					}
					this._Clientes.Entity = value;
					if ((value != null))
					{
						value.Pedidos.Add(this);
						this._CodCliente = value.CodCliente;
					}
					else
					{
						this._CodCliente = default(string);
					}
					this.SendPropertyChanged("Clientes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetallesPedido(DetallesPedido entity)
		{
			this.SendPropertyChanging();
			entity.Pedidos = this;
		}
		
		private void detach_DetallesPedido(DetallesPedido entity)
		{
			this.SendPropertyChanging();
			entity.Pedidos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TInventario")]
	public partial class Inventario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodInventario;
		
		private string _CodProducto;
		
		private int _CantidadDisponible;
		
		private EntityRef<Productos> _Productos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodInventarioChanging(string value);
    partial void OnCodInventarioChanged();
    partial void OnCodProductoChanging(string value);
    partial void OnCodProductoChanged();
    partial void OnCantidadDisponibleChanging(int value);
    partial void OnCantidadDisponibleChanged();
    #endregion
		
		public Inventario()
		{
			this._Productos = default(EntityRef<Productos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodInventario", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodInventario
		{
			get
			{
				return this._CodInventario;
			}
			set
			{
				if ((this._CodInventario != value))
				{
					this.OnCodInventarioChanging(value);
					this.SendPropertyChanging();
					this._CodInventario = value;
					this.SendPropertyChanged("CodInventario");
					this.OnCodInventarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodProducto", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string CodProducto
		{
			get
			{
				return this._CodProducto;
			}
			set
			{
				if ((this._CodProducto != value))
				{
					if (this._Productos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodProductoChanging(value);
					this.SendPropertyChanging();
					this._CodProducto = value;
					this.SendPropertyChanged("CodProducto");
					this.OnCodProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CantidadDisponible", DbType="Int NOT NULL")]
		public int CantidadDisponible
		{
			get
			{
				return this._CantidadDisponible;
			}
			set
			{
				if ((this._CantidadDisponible != value))
				{
					this.OnCantidadDisponibleChanging(value);
					this.SendPropertyChanging();
					this._CantidadDisponible = value;
					this.SendPropertyChanged("CantidadDisponible");
					this.OnCantidadDisponibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TProductos_TInventario", Storage="_Productos", ThisKey="CodProducto", OtherKey="CodProducto", IsForeignKey=true)]
		public Productos Productos
		{
			get
			{
				return this._Productos.Entity;
			}
			set
			{
				Productos previousValue = this._Productos.Entity;
				if (((previousValue != value) 
							|| (this._Productos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Productos.Entity = null;
						previousValue.Inventario.Remove(this);
					}
					this._Productos.Entity = value;
					if ((value != null))
					{
						value.Inventario.Add(this);
						this._CodProducto = value.CodProducto;
					}
					else
					{
						this._CodProducto = default(string);
					}
					this.SendPropertyChanged("Productos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TDetallesPedido")]
	public partial class DetallesPedido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodDetallePedido;
		
		private string _CodPedido;
		
		private string _CodProducto;
		
		private int _Cantidad;
		
		private decimal _PrecioUnitario;
		
		private string _CodDescuento;
		
		private EntityRef<Pedidos> _Pedidos;
		
		private EntityRef<Productos> _Productos;
		
		private EntityRef<Descuentos> _Descuentos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodDetallePedidoChanging(string value);
    partial void OnCodDetallePedidoChanged();
    partial void OnCodPedidoChanging(string value);
    partial void OnCodPedidoChanged();
    partial void OnCodProductoChanging(string value);
    partial void OnCodProductoChanged();
    partial void OnCantidadChanging(int value);
    partial void OnCantidadChanged();
    partial void OnPrecioUnitarioChanging(decimal value);
    partial void OnPrecioUnitarioChanged();
    partial void OnCodDescuentoChanging(string value);
    partial void OnCodDescuentoChanged();
    #endregion
		
		public DetallesPedido()
		{
			this._Pedidos = default(EntityRef<Pedidos>);
			this._Productos = default(EntityRef<Productos>);
			this._Descuentos = default(EntityRef<Descuentos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodDetallePedido", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodDetallePedido
		{
			get
			{
				return this._CodDetallePedido;
			}
			set
			{
				if ((this._CodDetallePedido != value))
				{
					this.OnCodDetallePedidoChanging(value);
					this.SendPropertyChanging();
					this._CodDetallePedido = value;
					this.SendPropertyChanged("CodDetallePedido");
					this.OnCodDetallePedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodPedido", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string CodPedido
		{
			get
			{
				return this._CodPedido;
			}
			set
			{
				if ((this._CodPedido != value))
				{
					if (this._Pedidos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodPedidoChanging(value);
					this.SendPropertyChanging();
					this._CodPedido = value;
					this.SendPropertyChanged("CodPedido");
					this.OnCodPedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodProducto", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string CodProducto
		{
			get
			{
				return this._CodProducto;
			}
			set
			{
				if ((this._CodProducto != value))
				{
					if (this._Productos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodProductoChanging(value);
					this.SendPropertyChanging();
					this._CodProducto = value;
					this.SendPropertyChanged("CodProducto");
					this.OnCodProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int NOT NULL")]
		public int Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecioUnitario", DbType="Decimal(10,2) NOT NULL")]
		public decimal PrecioUnitario
		{
			get
			{
				return this._PrecioUnitario;
			}
			set
			{
				if ((this._PrecioUnitario != value))
				{
					this.OnPrecioUnitarioChanging(value);
					this.SendPropertyChanging();
					this._PrecioUnitario = value;
					this.SendPropertyChanged("PrecioUnitario");
					this.OnPrecioUnitarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodDescuento", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string CodDescuento
		{
			get
			{
				return this._CodDescuento;
			}
			set
			{
				if ((this._CodDescuento != value))
				{
					if (this._Descuentos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodDescuentoChanging(value);
					this.SendPropertyChanging();
					this._CodDescuento = value;
					this.SendPropertyChanged("CodDescuento");
					this.OnCodDescuentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TPedidos_TDetallesPedido", Storage="_Pedidos", ThisKey="CodPedido", OtherKey="CodPedido", IsForeignKey=true)]
		public Pedidos Pedidos
		{
			get
			{
				return this._Pedidos.Entity;
			}
			set
			{
				Pedidos previousValue = this._Pedidos.Entity;
				if (((previousValue != value) 
							|| (this._Pedidos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pedidos.Entity = null;
						previousValue.DetallesPedido.Remove(this);
					}
					this._Pedidos.Entity = value;
					if ((value != null))
					{
						value.DetallesPedido.Add(this);
						this._CodPedido = value.CodPedido;
					}
					else
					{
						this._CodPedido = default(string);
					}
					this.SendPropertyChanged("Pedidos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TProductos_TDetallesPedido", Storage="_Productos", ThisKey="CodProducto", OtherKey="CodProducto", IsForeignKey=true)]
		public Productos Productos
		{
			get
			{
				return this._Productos.Entity;
			}
			set
			{
				Productos previousValue = this._Productos.Entity;
				if (((previousValue != value) 
							|| (this._Productos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Productos.Entity = null;
						previousValue.DetallesPedido.Remove(this);
					}
					this._Productos.Entity = value;
					if ((value != null))
					{
						value.DetallesPedido.Add(this);
						this._CodProducto = value.CodProducto;
					}
					else
					{
						this._CodProducto = default(string);
					}
					this.SendPropertyChanged("Productos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TDescuentos_TDetallesPedido", Storage="_Descuentos", ThisKey="CodDescuento", OtherKey="CodDescuento", IsForeignKey=true)]
		public Descuentos Descuentos
		{
			get
			{
				return this._Descuentos.Entity;
			}
			set
			{
				Descuentos previousValue = this._Descuentos.Entity;
				if (((previousValue != value) 
							|| (this._Descuentos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Descuentos.Entity = null;
						previousValue.DetallesPedido.Remove(this);
					}
					this._Descuentos.Entity = value;
					if ((value != null))
					{
						value.DetallesPedido.Add(this);
						this._CodDescuento = value.CodDescuento;
					}
					else
					{
						this._CodDescuento = default(string);
					}
					this.SendPropertyChanged("Descuentos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TDescuentos")]
	public partial class Descuentos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodDescuento;
		
		private string _Descripcion;
		
		private decimal _Porcentaje;
		
		private EntitySet<DetallesPedido> _DetallesPedido;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodDescuentoChanging(string value);
    partial void OnCodDescuentoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnPorcentajeChanging(decimal value);
    partial void OnPorcentajeChanged();
    #endregion
		
		public Descuentos()
		{
			this._DetallesPedido = new EntitySet<DetallesPedido>(new Action<DetallesPedido>(this.attach_DetallesPedido), new Action<DetallesPedido>(this.detach_DetallesPedido));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodDescuento", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodDescuento
		{
			get
			{
				return this._CodDescuento;
			}
			set
			{
				if ((this._CodDescuento != value))
				{
					this.OnCodDescuentoChanging(value);
					this.SendPropertyChanging();
					this._CodDescuento = value;
					this.SendPropertyChanged("CodDescuento");
					this.OnCodDescuentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Porcentaje", DbType="Decimal(5,2) NOT NULL")]
		public decimal Porcentaje
		{
			get
			{
				return this._Porcentaje;
			}
			set
			{
				if ((this._Porcentaje != value))
				{
					this.OnPorcentajeChanging(value);
					this.SendPropertyChanging();
					this._Porcentaje = value;
					this.SendPropertyChanged("Porcentaje");
					this.OnPorcentajeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TDescuentos_TDetallesPedido", Storage="_DetallesPedido", ThisKey="CodDescuento", OtherKey="CodDescuento")]
		public EntitySet<DetallesPedido> DetallesPedido
		{
			get
			{
				return this._DetallesPedido;
			}
			set
			{
				this._DetallesPedido.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetallesPedido(DetallesPedido entity)
		{
			this.SendPropertyChanging();
			entity.Descuentos = this;
		}
		
		private void detach_DetallesPedido(DetallesPedido entity)
		{
			this.SendPropertyChanging();
			entity.Descuentos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TClientes")]
	public partial class Clientes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodCliente;
		
		private string _Nombre;
		
		private string _APaterno;
		
		private string _AMaterno;
		
		private string _Email;
		
		private string _Telefono;
		
		private string _Direccion;
		
		private string _CodUsuario;
		
		private EntitySet<Pedidos> _Pedidos;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodClienteChanging(string value);
    partial void OnCodClienteChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnAPaternoChanging(string value);
    partial void OnAPaternoChanged();
    partial void OnAMaternoChanging(string value);
    partial void OnAMaternoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnCodUsuarioChanging(string value);
    partial void OnCodUsuarioChanged();
    #endregion
		
		public Clientes()
		{
			this._Pedidos = new EntitySet<Pedidos>(new Action<Pedidos>(this.attach_Pedidos), new Action<Pedidos>(this.detach_Pedidos));
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodCliente", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodCliente
		{
			get
			{
				return this._CodCliente;
			}
			set
			{
				if ((this._CodCliente != value))
				{
					this.OnCodClienteChanging(value);
					this.SendPropertyChanging();
					this._CodCliente = value;
					this.SendPropertyChanged("CodCliente");
					this.OnCodClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APaterno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string APaterno
		{
			get
			{
				return this._APaterno;
			}
			set
			{
				if ((this._APaterno != value))
				{
					this.OnAPaternoChanging(value);
					this.SendPropertyChanging();
					this._APaterno = value;
					this.SendPropertyChanged("APaterno");
					this.OnAPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AMaterno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AMaterno
		{
			get
			{
				return this._AMaterno;
			}
			set
			{
				if ((this._AMaterno != value))
				{
					this.OnAMaternoChanging(value);
					this.SendPropertyChanging();
					this._AMaterno = value;
					this.SendPropertyChanged("AMaterno");
					this.OnAMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodUsuario", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CodUsuario
		{
			get
			{
				return this._CodUsuario;
			}
			set
			{
				if ((this._CodUsuario != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodUsuarioChanging(value);
					this.SendPropertyChanging();
					this._CodUsuario = value;
					this.SendPropertyChanged("CodUsuario");
					this.OnCodUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TClientes_TPedidos", Storage="_Pedidos", ThisKey="CodCliente", OtherKey="CodCliente")]
		public EntitySet<Pedidos> Pedidos
		{
			get
			{
				return this._Pedidos;
			}
			set
			{
				this._Pedidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TUsuarios_TClientes", Storage="_Usuarios", ThisKey="CodUsuario", OtherKey="CodUsuario", IsForeignKey=true)]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Clientes.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Clientes.Add(this);
						this._CodUsuario = value.CodUsuario;
					}
					else
					{
						this._CodUsuario = default(string);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Clientes = this;
		}
		
		private void detach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Clientes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TCategorias")]
	public partial class Categorias : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodCategoria;
		
		private string _Nombre;
		
		private string _Descripcion;
		
		private EntitySet<Productos> _Productos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodCategoriaChanging(string value);
    partial void OnCodCategoriaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Categorias()
		{
			this._Productos = new EntitySet<Productos>(new Action<Productos>(this.attach_Productos), new Action<Productos>(this.detach_Productos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodCategoria", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodCategoria
		{
			get
			{
				return this._CodCategoria;
			}
			set
			{
				if ((this._CodCategoria != value))
				{
					this.OnCodCategoriaChanging(value);
					this.SendPropertyChanging();
					this._CodCategoria = value;
					this.SendPropertyChanged("CodCategoria");
					this.OnCodCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TCategorias_TProductos", Storage="_Productos", ThisKey="CodCategoria", OtherKey="CodCategoria")]
		public EntitySet<Productos> Productos
		{
			get
			{
				return this._Productos;
			}
			set
			{
				this._Productos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Productos(Productos entity)
		{
			this.SendPropertyChanging();
			entity.Categorias = this;
		}
		
		private void detach_Productos(Productos entity)
		{
			this.SendPropertyChanging();
			entity.Categorias = null;
		}
	}
}
#pragma warning restore 1591
